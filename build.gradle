plugins {
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'java'
    id 'io.franzbecker.gradle-lombok' version '1.14'
}

apply plugin: 'java'

group 'com.hileco'

sourceCompatibility = 1.10

repositories {
    mavenLocal()
    maven { url 'https://repo.spring.io/libs-snapshot' }
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

lombok {
    version = '1.18.2'
}

dependencies {
    compile 'io.projectreactor.ipc:reactor-netty:0.7.1.RELEASE'
    compile 'org.springframework:spring-context:5.0.1.RELEASE'
    compile 'org.springframework:spring-webflux:5.0.1.RELEASE'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'com.microsoft.z3:z3:4.7.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.7'
    compileOnly 'org.projectlombok:lombok:1.18.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.springframework:spring-test:5.0.1.RELEASE'
    testCompile "org.springframework.restdocs:spring-restdocs-webtestclient:2.0.3.BUILD-SNAPSHOT"
    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.3.BUILD-SNAPSHOT"
    testCompile 'org.mockito:mockito-core:2.19.1'
}

test {
    outputs.dir snippetsDir
    ignoreFailures true
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}


tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
}

jar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes 'Main-Class': 'com.hileco.cortex.server.Server'
    }
}

task run(type: JavaExec) {
    dependsOn jar
    main = "-jar"
    args jar.archivePath
}
